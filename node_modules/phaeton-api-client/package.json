{
  "_from": "git+https://git@github.com/hotam-singh/phaeton-api-client.git",
  "_id": "phaeton-api-client@2.0.3",
  "_inBundle": false,
  "_integrity": "",
  "_location": "/phaeton-api-client",
  "_phantomChildren": {},
  "_requested": {
    "type": "git",
    "raw": "phaeton-api-client@git+https://git@github.com/hotam-singh/phaeton-api-client.git",
    "name": "phaeton-api-client",
    "escapedName": "phaeton-api-client",
    "rawSpec": "git+https://git@github.com/hotam-singh/phaeton-api-client.git",
    "saveSpec": "git+https://git@github.com/hotam-singh/phaeton-api-client.git",
    "fetchSpec": "https://git@github.com/hotam-singh/phaeton-api-client.git",
    "gitCommittish": null
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://git@github.com/hotam-singh/phaeton-api-client.git#2fabf55beec2056eb7f0efba03f0a88eed8b9ab9",
  "_shasum": "ff6629da1e6f3d5519ff2cba7b6e309f504afa26",
  "_spec": "phaeton-api-client@git+https://git@github.com/hotam-singh/phaeton-api-client.git",
  "_where": "/home/hotam/project/phaeton/phaeton-packages/phaeton-commander",
  "author": {
    "name": "Phaeton Foundation",
    "email": "admin@phaeton.io"
  },
  "bugs": {
    "url": "https://github.com/PhaetonHQ/phaeton-sdk/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@types/node": "10.12.21",
    "axios": "0.19.0"
  },
  "deprecated": false,
  "description": "An API client for the Phaeton network",
  "devDependencies": {
    "@types/chai": "4.1.7",
    "@types/chai-as-promised": "7.1.0",
    "@types/expect": "1.20.3",
    "@types/jquery": "3.3.29",
    "@types/mocha": "5.2.5",
    "@types/sinon": "7.0.5",
    "@types/sinon-chai": "3.2.2",
    "browserify": "16.2.3",
    "chai": "4.2.0",
    "chai-as-promised": "7.1.1",
    "cypress": "3.4.1",
    "http-server": "0.11.1",
    "mocha": "5.2.0",
    "nyc": "14.1.1",
    "prettier": "1.16.4",
    "sinon": "7.2.3",
    "sinon-chai": "3.3.0",
    "source-map-support": "0.5.10",
    "ts-node": "8.0.2",
    "tsconfig-paths": "3.8.0",
    "tslint": "5.12.1",
    "tslint-config-prettier": "1.18.0",
    "tslint-immutable": "5.1.2",
    "typescript": "3.3.1",
    "uglify-es": "3.3.9",
    "wait-on": "3.2.0"
  },
  "engines": {
    "node": ">=8.10 <=10",
    "npm": ">=5"
  },
  "homepage": "https://github.com/PhaetonHQ/phaeton-sdk/tree/master/elements/phaeton-api-client#readme",
  "keywords": [
    "phaeton",
    "blockchain"
  ],
  "license": "Apache-2.0",
  "main": "dist-node/index.js",
  "name": "phaeton-api-client",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/PhaetonHQ/phaeton-sdk.git"
  },
  "scripts": {
    "browserify": "browserify ./dist-node/index.js -o ./dist-browser/index.js -s phaetonAPIClient",
    "browserify:browsertest": "browserify ./browsertest.build/test/*.js ./browsertest.build/test/**/*.js -o ./browsertest.build/browsertest.js -s phaetonAPIClient",
    "build": "npm run build:browser",
    "build:browser": "npm run build:node && npm run browserify && npm run uglify",
    "build:browsertest": "npm run transpile:browsertest && npm run browserify:browsertest && npm run uglify:browsertest",
    "build:check": "node -e \"require('./dist-node')\"",
    "build:node": "npm run transpile",
    "clean": "./scripts/clean.sh",
    "cover": "if [ -z $JENKINS_HOME ]; then npm run cover:local; else npm run cover:ci; fi",
    "cover:base": "nyc report",
    "cover:ci": "npm run cover:base -- --reporter=text",
    "cover:local": "npm run cover:base -- --reporter=html --reporter=text",
    "format": "prettier --write '**/*'",
    "lint": "tslint --format verbose --project .",
    "lint:fix": "npm run lint -- --fix",
    "postbuild:browsertest": "rm -r browsertest.build/src browsertest.build/test",
    "posttest:browser": "npm run serve:stop",
    "prebuild": "npm run prebuild:browser",
    "prebuild:browser": "rm ./dist-browser/index.js ./dist-browser/index.min.js || true",
    "prebuild:node": "rm -r dist-node/* || mkdir dist-node || true",
    "prepublishOnly": "npm run lint && npm test && npm run build && npm run build:check",
    "pretest:browser": "npm run serve:stop && npm run build:browsertest && npm run serve:start",
    "serve:start": "http-server -p 11541 ./browsertest &",
    "serve:stop": "kill $(lsof -t -i:11541) || true",
    "test": "TS_NODE_PROJECT=./test/tsconfig.json nyc mocha test/{,/**/}/*.ts",
    "test:browser": "wait-on http://localhost:11541 && cypress run --config baseUrl=http://localhost:11541 --env ROOT_DIR=\"${PWD##*/}\"",
    "test:node": "npm run build:check",
    "test:watch": "npm test -- --watch",
    "test:watch:min": "npm run test:watch -- --reporter=min",
    "transpile": "tsc",
    "transpile:browsertest": "tsc -p tsconfig.browsertest.json",
    "uglify": "uglifyjs -nm -o ./dist-browser/index.min.js ./dist-browser/index.js",
    "uglify:browsertest": "uglifyjs -o ./browsertest.build/browsertest.min.js ./browsertest.build/browsertest.js"
  },
  "version": "2.0.3"
}
